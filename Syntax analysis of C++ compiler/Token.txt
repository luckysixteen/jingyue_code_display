0: 
1: 
2: int addDigits(int num) {
     2:   [keyWord]： int        [INT]
     2:   [     ID]： addDigits  [ID]
     2:   [symbols]： (          [LPAREN]
     2:   [keyWord]： int        [INT]
     2:   [     ID]： num        [ID]
     2:   [symbols]： )          [RPAREN]
     2:   [symbols]： {          [LBBRACKET]
3:     if(num<10)
     3:   [keyWord]： if         [IF]
     3:   [symbols]： (          [LPAREN]
     3:   [     ID]： num        [ID]
     3:   [symbols]： <          [LT]
     3:   [    NUM]： 10         [NUM]
     3:   [symbols]： )          [RPAREN]
4:     return num;
     4:   [keyWord]： return     [RETURN]
     4:   [     ID]： num        [ID]
     4:   [symbols]： ;          [SEMI]
5:     else
     5:   [keyWord]： else       [ELSE]
6:     {
     6:   [symbols]： {          [LBBRACKET]
7:         int a;int b;
     7:   [keyWord]： int        [INT]
     7:   [     ID]： a          [ID]
     7:   [symbols]： ;          [SEMI]
     7:   [keyWord]： int        [INT]
     7:   [     ID]： b          [ID]
     7:   [symbols]： ;          [SEMI]
8:         a=num-10;
     8:   [     ID]： a          [ID]
     8:   [symbols]： =          [ASSIGN]
     8:   [     ID]： num        [ID]
     8:   [symbols]： -          [MINUS]
     8:   [    NUM]： 10         [NUM]
     8:   [symbols]： ;          [SEMI]
9:         b=num/10;
     9:   [     ID]： b          [ID]
     9:   [symbols]： =          [ASSIGN]
     9:   [     ID]： num        [ID]
     9:   [symbols]： /          [OVER]
     9:   [    NUM]： 10         [NUM]
     9:   [symbols]： ;          [SEMI]
10:         if(a<10)
     10:   [keyWord]： if         [IF]
     10:   [symbols]： (          [LPAREN]
     10:   [     ID]： a          [ID]
     10:   [symbols]： <          [LT]
     10:   [    NUM]： 10         [NUM]
     10:   [symbols]： )          [RPAREN]
11:         addDigits(a+b);
     11:   [     ID]： addDigits  [ID]
     11:   [symbols]： (          [LPAREN]
     11:   [     ID]： a          [ID]
     11:   [symbols]： +          [PLUS]
     11:   [     ID]： b          [ID]
     11:   [symbols]： )          [RPAREN]
     11:   [symbols]： ;          [SEMI]
12:         else addDigits(a+addDigits(b));
     12:   [keyWord]： else       [ELSE]
     12:   [     ID]： addDigits  [ID]
     12:   [symbols]： (          [LPAREN]
     12:   [     ID]： a          [ID]
     12:   [symbols]： +          [PLUS]
     12:   [     ID]： addDigits  [ID]
     12:   [symbols]： (          [LPAREN]
     12:   [     ID]： b          [ID]
     12:   [symbols]： )          [RPAREN]
     12:   [symbols]： )          [RPAREN]
     12:   [symbols]： ;          [SEMI]
13:     }
     13:   [symbols]： }          [RBBRACKET]
14:     
15: }
     15:   [symbols]： }          [RBBRACKET]
16: int number[2];
     16:   [keyWord]： int        [INT]
     16:   [     ID]： number     [ID]
     16:   [symbols]： [          [LMBRACKET]
     16:   [    NUM]： 2          [NUM]
     16:   [symbols]： ]          [RMBRACKET]
     16:   [symbols]： ;          [SEMI]
17: void main(void)
     17:   [keyWord]： void       [VOID]
     17:   [     ID]： main       [ID]
     17:   [symbols]： (          [LPAREN]
     17:   [keyWord]： void       [VOID]
     17:   [symbols]： )          [RPAREN]
18: {
     18:   [symbols]： {          [LBBRACKET]
19: 	
20: 	int i;
     20:   [keyWord]： int        [INT]
     20:   [     ID]： i          [ID]
     20:   [symbols]： ;          [SEMI]
21: 	i=0;
     21:   [     ID]： i          [ID]
     21:   [symbols]： =          [ASSIGN]
     21:   [    NUM]： 0          [NUM]
     21:   [symbols]： ;          [SEMI]
22: 	
23: 	while(i<2)
     23:   [keyWord]： while      [WHILE]
     23:   [symbols]： (          [LPAREN]
     23:   [     ID]： i          [ID]
     23:   [symbols]： <          [LT]
     23:   [    NUM]： 2          [NUM]
     23:   [symbols]： )          [RPAREN]
24:     {
     24:   [symbols]： {          [LBBRACKET]
25: 	number[i]=input();
     25:   [     ID]： number     [ID]
     25:   [symbols]： [          [LMBRACKET]
     25:   [     ID]： i          [ID]
     25:   [symbols]： ]          [RMBRACKET]
     25:   [symbols]： =          [ASSIGN]
     25:   [     ID]： input      [ID]
     25:   [symbols]： (          [LPAREN]
     25:   [symbols]： )          [RPAREN]
     25:   [symbols]： ;          [SEMI]
26: 	i=i+1;
     26:   [     ID]： i          [ID]
     26:   [symbols]： =          [ASSIGN]
     26:   [     ID]： i          [ID]
     26:   [symbols]： +          [PLUS]
     26:   [    NUM]： 1          [NUM]
     26:   [symbols]： ;          [SEMI]
27: 	number[i]=addDigits(number[i]);
     27:   [     ID]： number     [ID]
     27:   [symbols]： [          [LMBRACKET]
     27:   [     ID]： i          [ID]
     27:   [symbols]： ]          [RMBRACKET]
     27:   [symbols]： =          [ASSIGN]
     27:   [     ID]： addDigits  [ID]
     27:   [symbols]： (          [LPAREN]
     27:   [     ID]： number     [ID]
     27:   [symbols]： [          [LMBRACKET]
     27:   [     ID]： i          [ID]
     27:   [symbols]： ]          [RMBRACKET]
     27:   [symbols]： )          [RPAREN]
     27:   [symbols]： ;          [SEMI]
28: 	output(number[i]);
     28:   [     ID]： output     [ID]
     28:   [symbols]： (          [LPAREN]
     28:   [     ID]： number     [ID]
     28:   [symbols]： [          [LMBRACKET]
     28:   [     ID]： i          [ID]
     28:   [symbols]： ]          [RMBRACKET]
     28:   [symbols]： )          [RPAREN]
     28:   [symbols]： ;          [SEMI]
29: 
30:     }
     30:   [symbols]： }          [RBBRACKET]
31: 	
32: }
     32:   [symbols]： }          [RBBRACKET]
